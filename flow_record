#!/bin/bash

function record_unit() {
  # timeout 30 ./gor --input-raw :8003 --input-raw-track-response --output-stdout --output-file=rankingtest.gor --http-allow-url /recommend/ranking

  cd /data/ranking-data/zy_ps_10/tmp

  service_name=`printenv | grep 'K8S_POD_NAME=online' | awk -F '-' '{print $2}'`
  echo "The service name is "${service_name}

  # Before record flow, Delete the flow file
  file_name=${service_name}_0.gor
  echo "The flow file name in request is "${file_name}
  rm  -rf ${file_name}

  # The default port is 8003, don't edit.
  port=8003
  # The default url is "/recommend/ranking", don't   edit.
  url="/recommend/ranking"

  # record 30 second
  timeout 30 gor --input-raw :${port} --input-raw-track-response --output-stdout --output-file=${service_name}.gor --http-allow-url ${url}

  if [ -f ${file_name} ]; then
      # TODO When the file size is too large, we need to split the file
      file_size=`ls -lh ${file_name} | awk '{print $5}'`
      echo "This flow file size is "${file_size}

      curl -F file=@$file_name http://172.16.2.86:8080/flowreplay/collect_flow_file
  else
    echo "The ${file_name} is not exist, please record again!!!"
  fi
}
# The script need a param, be used in the loop. eg: ./gor_record 720h
if [ $1 ]; then
  while :
  do
      period=$1
      record_unit
      echo -e "\n This is a loop task ~ ~ ~"
      sleep ${period}
  done
else
  record_unit
  echo -e "\n This is a one-time task ~ ~ ~"
fi
